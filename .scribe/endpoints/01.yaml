name: 'Customer Management'
description: |-

  APIs for managing customers
endpoints:
  -
    httpMethods:
      - GET
    uri: api/customers
    metadata:
      groupName: 'Customer Management'
      groupDescription: |-

        APIs for managing customers
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all customers'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "customers": [
              {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "phone": "+60123456789",
                "total_points": 50,
                "business_id": 1
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 2|cGvRLrSa6Uy6Ld40NCm3EnfjdfF3p80axm7bs9F43cd296d0'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/customers
    metadata:
      groupName: 'Customer Management'
      groupDescription: |-

        APIs for managing customers
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new customer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The customer's name."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "nullable The customer's email."
        required: false
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      phone:
        name: phone
        description: "nullable The customer's phone number."
        required: false
        example: '+60123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      phone: '+60123456789'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "id": 1,
            "name": "John Doe",
            "email": "john@example.com",
            "phone": "+60123456789",
            "total_points": 0,
            "business_id": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 2|cGvRLrSa6Uy6Ld40NCm3EnfjdfF3p80axm7bs9F43cd296d0'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/customers/{id}'
    metadata:
      groupName: 'Customer Management'
      groupDescription: |-

        APIs for managing customers
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a single customer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "John Doe",
            "email": "john@example.com",
            "phone": "+60123456789",
            "total_points": 50,
            "business_id": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 2|cGvRLrSa6Uy6Ld40NCm3EnfjdfF3p80axm7bs9F43cd296d0'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/customers/{id}'
    metadata:
      groupName: 'Customer Management'
      groupDescription: |-

        APIs for managing customers
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a customer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "optional The customer's new name."
        required: false
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: "optional The customer's new email."
        required: false
        example: jane@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      phone:
        name: phone
        description: "optional The customer's new phone number."
        required: false
        example: '+60123456789'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane@example.com
      phone: '+60123456789'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "id": 1,
            "name": "Jane Doe",
            "email": "jane@example.com",
            "phone": "+60123456789",
            "total_points": 50,
            "business_id": 1
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 2|cGvRLrSa6Uy6Ld40NCm3EnfjdfF3p80axm7bs9F43cd296d0'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/customers/{id}'
    metadata:
      groupName: 'Customer Management'
      groupDescription: |-

        APIs for managing customers
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a customer'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Customer deleted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer 2|cGvRLrSa6Uy6Ld40NCm3EnfjdfF3p80axm7bs9F43cd296d0'
    controller: null
    method: null
    route: null
    custom: []
